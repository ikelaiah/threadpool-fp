<?xml version="1.0" encoding="UTF-8"?>
<CONFIG>
  <Package Version="5">
    <PathDelim Value="\"/>
    <Name Value="ThreadPool_FP"/>
    <Author Value="Iwan Kelaiah"/>
    <CompilerOptions>
      <Version Value="11"/>
      <PathDelim Value="\"/>
      <SearchPaths>
        <OtherUnitFiles Value="..\..\src"/>
        <UnitOutputDirectory Value="lib\$(TargetCPU)-$(TargetOS)"/>
      </SearchPaths>
      <CodeGeneration>
        <Optimizations>
          <OptimizationLevel Value="2"/>
        </Optimizations>
      </CodeGeneration>
    </CompilerOptions>
    <Description Value="# 🚀 ThreadPool for Free Pascal

A lightweight, easy-to-use thread pool implementation for Free Pascal. Simplify parallel processing for simple tasks! ⚡

## ✨ Features &amp; Implementations

This library provides two thread pool implementations, each with its own strengths:

### 1. 🚀 Simple Thread Pool (ThreadPool.Simple)
```pascal
uses ThreadPool.Simple;
```
- Global singleton instance for quick use
- Direct task execution
- Automatic thread count management
- Best for simple parallel tasks
- Lower memory overhead

### 2. 🏭 Producer-Consumer Thread Pool (ThreadPool.ProducerConsumer)
```pascal
uses ThreadPool.ProducerConsumer;
```

A thread pool with fixed-size circular buffer (1024 items) and built-in backpressure handling:

- **Queue Management**
  - Fixed-size circular buffer for predictable memory usage
  - Efficient space reuse without dynamic resizing
  - Configurable capacity (default: 1024 items)

- **Backpressure Handling**
  - Load-based adaptive delays (10ms to 100ms)
  - Automatic retry mechanism (up to 5 attempts)
  - Throws EQueueFullException when retries exhausted

- **Monitoring &amp; Debug**
  - Thread-safe error capture with thread IDs
  - Detailed debug logging (can be disabled)

Best for:
- High-volume task processing with rate control
- Systems needing graceful overflow handling
- Applications requiring execution monitoring"/>
    <License Value="MIT License

Copyright (c) 2024 Iwan Kelaiah

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &quot;Software&quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE. "/>
    <Version Minor="3"/>
    <Files>
      <Item>
        <Filename Value="..\..\src\ThreadPool.Simple.pas"/>
        <UnitName Value="ThreadPool.Simple"/>
      </Item>
      <Item>
        <Filename Value="..\..\src\ThreadPool.Types.pas"/>
        <UnitName Value="ThreadPool.Types"/>
      </Item>
      <Item>
        <Filename Value="..\..\src\ThreadPool.ProducerConsumer.pas"/>
        <UnitName Value="ThreadPool.ProducerConsumer"/>
      </Item>
    </Files>
    <RequiredPkgs>
      <Item>
        <PackageName Value="FCL"/>
      </Item>
    </RequiredPkgs>
    <UsageOptions>
      <UnitPath Value="$(PkgOutDir)"/>
    </UsageOptions>
    <PublishOptions>
      <Version Value="2"/>
      <UseFileFilters Value="True"/>
    </PublishOptions>
  </Package>
</CONFIG>
